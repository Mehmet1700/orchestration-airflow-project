version: '3.8'

services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 10s
      retries: 5
      start_period: 5s

  airflow-init:
    image: apache/airflow:2.7.2
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__CORE__FERNET_KEY: tyRE8Zns5ZLh3uYN8F8CsBlEKLZJVOuH8wnY1zCLKv8=
      AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
    volumes:
      - ./scripts:/docker-entrypoint-initdb.d  # Mount für Setup-Skripte in den Container
    entrypoint: >
      /bin/bash -c "
      airflow db migrate &&
      airflow users create -u admin -f Admin -l User -r Admin -e admin@example.com -p admin ||
      echo 'Admin user already exists.'
      "

  airflow-webserver:
    image: apache/airflow:2.7.2
    depends_on:
      postgres:
        condition: service_healthy
      airflow-init:
        condition: service_completed_successfully
    ports:
      - "8080:8080"
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__CORE__FERNET_KEY: tyRE8Zns5ZLh3uYN8F8CsBlEKLZJVOuH8wnY1zCLKv8=
    volumes:
      - ./dags:/opt/airflow/dags  # Mount für DAGs
      - ./dags/sql:/opt/airflow/include/sql  # Mount für SQL-Skripte
    command: ["webserver"]

  airflow-scheduler:
    image: apache/airflow:2.7.2
    depends_on:
      postgres:
        condition: service_healthy
      airflow-init:
        condition: service_completed_successfully
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__CORE__FERNET_KEY: tyRE8Zns5ZLh3uYN8F8CsBlEKLZJVOuH8wnY1zCLKv8=
    volumes:
      - ./dags:/opt/airflow/dags  # Mount für DAGs
      - ./dags/sql:/opt/airflow/include/sql  # Mount für SQL-Skripte
    command: ["scheduler"]

volumes:
  postgres-data:
